package com.consistent.ucwrt.model.impl;

import com.consistent.ucwrt.model.EntitySuburb;
import com.consistent.ucwrt.model.EntitySuburbModel;
import com.consistent.ucwrt.model.EntitySuburbSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the EntitySuburb service. Represents a row in the &quot;Suburb&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.consistent.ucwrt.model.EntitySuburbModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EntitySuburbImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see EntitySuburbImpl
 * @see com.consistent.ucwrt.model.EntitySuburb
 * @see com.consistent.ucwrt.model.EntitySuburbModel
 * @generated
 */
@JSON(strict = true)
public class EntitySuburbModelImpl extends BaseModelImpl<EntitySuburb>
    implements EntitySuburbModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a entity suburb model instance should use the {@link com.consistent.ucwrt.model.EntitySuburb} interface instead.
     */
    public static final String TABLE_NAME = "Suburb";
    public static final Object[][] TABLE_COLUMNS = {
            { "suburbId", Types.INTEGER },
            { "suburbName", Types.VARCHAR },
            { "postalCode", Types.VARCHAR },
            { "municipalId", Types.INTEGER }
        };
    public static final String TABLE_SQL_CREATE = "create table Suburb (suburbId INTEGER not null primary key,suburbName VARCHAR(75) null,postalCode VARCHAR(75) null,municipalId INTEGER)";
    public static final String TABLE_SQL_DROP = "drop table Suburb";
    public static final String ORDER_BY_JPQL = " ORDER BY entitySuburb.suburbId ASC";
    public static final String ORDER_BY_SQL = " ORDER BY Suburb.suburbId ASC";
    public static final String DATA_SOURCE = "ucwrtDataSource";
    public static final String SESSION_FACTORY = "ucwrtSessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.consistent.ucwrt.model.EntitySuburb"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.consistent.ucwrt.model.EntitySuburb"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.com.consistent.ucwrt.model.EntitySuburb"),
            true);
    public static long MUNICIPALID_COLUMN_BITMASK = 1L;
    public static long SUBURBID_COLUMN_BITMASK = 2L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.consistent.ucwrt.model.EntitySuburb"));
    private static ClassLoader _classLoader = EntitySuburb.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            EntitySuburb.class
        };
    private int _suburbId;
    private int _originalSuburbId;
    private boolean _setOriginalSuburbId;
    private String _suburbName;
    private String _postalCode;
    private int _municipalId;
    private int _originalMunicipalId;
    private boolean _setOriginalMunicipalId;
    private long _columnBitmask;
    private EntitySuburb _escapedModel;

    public EntitySuburbModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static EntitySuburb toModel(EntitySuburbSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        EntitySuburb model = new EntitySuburbImpl();

        model.setSuburbId(soapModel.getSuburbId());
        model.setSuburbName(soapModel.getSuburbName());
        model.setPostalCode(soapModel.getPostalCode());
        model.setMunicipalId(soapModel.getMunicipalId());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<EntitySuburb> toModels(EntitySuburbSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<EntitySuburb> models = new ArrayList<EntitySuburb>(soapModels.length);

        for (EntitySuburbSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public int getPrimaryKey() {
        return _suburbId;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setSuburbId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _suburbId;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return EntitySuburb.class;
    }

    @Override
    public String getModelClassName() {
        return EntitySuburb.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("suburbId", getSuburbId());
        attributes.put("suburbName", getSuburbName());
        attributes.put("postalCode", getPostalCode());
        attributes.put("municipalId", getMunicipalId());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Integer suburbId = (Integer) attributes.get("suburbId");

        if (suburbId != null) {
            setSuburbId(suburbId);
        }

        String suburbName = (String) attributes.get("suburbName");

        if (suburbName != null) {
            setSuburbName(suburbName);
        }

        String postalCode = (String) attributes.get("postalCode");

        if (postalCode != null) {
            setPostalCode(postalCode);
        }

        Integer municipalId = (Integer) attributes.get("municipalId");

        if (municipalId != null) {
            setMunicipalId(municipalId);
        }
    }

    @JSON
    @Override
    public int getSuburbId() {
        return _suburbId;
    }

    @Override
    public void setSuburbId(int suburbId) {
        _columnBitmask |= SUBURBID_COLUMN_BITMASK;

        if (!_setOriginalSuburbId) {
            _setOriginalSuburbId = true;

            _originalSuburbId = _suburbId;
        }

        _suburbId = suburbId;
    }

    public int getOriginalSuburbId() {
        return _originalSuburbId;
    }

    @JSON
    @Override
    public String getSuburbName() {
        if (_suburbName == null) {
            return StringPool.BLANK;
        } else {
            return _suburbName;
        }
    }

    @Override
    public void setSuburbName(String suburbName) {
        _suburbName = suburbName;
    }

    @JSON
    @Override
    public String getPostalCode() {
        if (_postalCode == null) {
            return StringPool.BLANK;
        } else {
            return _postalCode;
        }
    }

    @Override
    public void setPostalCode(String postalCode) {
        _postalCode = postalCode;
    }

    @JSON
    @Override
    public int getMunicipalId() {
        return _municipalId;
    }

    @Override
    public void setMunicipalId(int municipalId) {
        _columnBitmask |= MUNICIPALID_COLUMN_BITMASK;

        if (!_setOriginalMunicipalId) {
            _setOriginalMunicipalId = true;

            _originalMunicipalId = _municipalId;
        }

        _municipalId = municipalId;
    }

    public int getOriginalMunicipalId() {
        return _originalMunicipalId;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public EntitySuburb toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (EntitySuburb) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        EntitySuburbImpl entitySuburbImpl = new EntitySuburbImpl();

        entitySuburbImpl.setSuburbId(getSuburbId());
        entitySuburbImpl.setSuburbName(getSuburbName());
        entitySuburbImpl.setPostalCode(getPostalCode());
        entitySuburbImpl.setMunicipalId(getMunicipalId());

        entitySuburbImpl.resetOriginalValues();

        return entitySuburbImpl;
    }

    @Override
    public int compareTo(EntitySuburb entitySuburb) {
        int primaryKey = entitySuburb.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof EntitySuburb)) {
            return false;
        }

        EntitySuburb entitySuburb = (EntitySuburb) obj;

        int primaryKey = entitySuburb.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        EntitySuburbModelImpl entitySuburbModelImpl = this;

        entitySuburbModelImpl._originalSuburbId = entitySuburbModelImpl._suburbId;

        entitySuburbModelImpl._setOriginalSuburbId = false;

        entitySuburbModelImpl._originalMunicipalId = entitySuburbModelImpl._municipalId;

        entitySuburbModelImpl._setOriginalMunicipalId = false;

        entitySuburbModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<EntitySuburb> toCacheModel() {
        EntitySuburbCacheModel entitySuburbCacheModel = new EntitySuburbCacheModel();

        entitySuburbCacheModel.suburbId = getSuburbId();

        entitySuburbCacheModel.suburbName = getSuburbName();

        String suburbName = entitySuburbCacheModel.suburbName;

        if ((suburbName != null) && (suburbName.length() == 0)) {
            entitySuburbCacheModel.suburbName = null;
        }

        entitySuburbCacheModel.postalCode = getPostalCode();

        String postalCode = entitySuburbCacheModel.postalCode;

        if ((postalCode != null) && (postalCode.length() == 0)) {
            entitySuburbCacheModel.postalCode = null;
        }

        entitySuburbCacheModel.municipalId = getMunicipalId();

        return entitySuburbCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(9);

        sb.append("{suburbId=");
        sb.append(getSuburbId());
        sb.append(", suburbName=");
        sb.append(getSuburbName());
        sb.append(", postalCode=");
        sb.append(getPostalCode());
        sb.append(", municipalId=");
        sb.append(getMunicipalId());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(16);

        sb.append("<model><model-name>");
        sb.append("com.consistent.ucwrt.model.EntitySuburb");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>suburbId</column-name><column-value><![CDATA[");
        sb.append(getSuburbId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>suburbName</column-name><column-value><![CDATA[");
        sb.append(getSuburbName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>postalCode</column-name><column-value><![CDATA[");
        sb.append(getPostalCode());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>municipalId</column-name><column-value><![CDATA[");
        sb.append(getMunicipalId());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
