package com.consistent.ucwrt.model.impl;

import com.consistent.ucwrt.model.EntityBusinessBrand;
import com.consistent.ucwrt.model.EntityBusinessBrandModel;
import com.consistent.ucwrt.model.EntityBusinessBrandSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the EntityBusinessBrand service. Represents a row in the &quot;BusinessBrand&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.consistent.ucwrt.model.EntityBusinessBrandModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EntityBusinessBrandImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see EntityBusinessBrandImpl
 * @see com.consistent.ucwrt.model.EntityBusinessBrand
 * @see com.consistent.ucwrt.model.EntityBusinessBrandModel
 * @generated
 */
@JSON(strict = true)
public class EntityBusinessBrandModelImpl extends BaseModelImpl<EntityBusinessBrand>
    implements EntityBusinessBrandModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a entity business brand model instance should use the {@link com.consistent.ucwrt.model.EntityBusinessBrand} interface instead.
     */
    public static final String TABLE_NAME = "BusinessBrand";
    public static final Object[][] TABLE_COLUMNS = {
            { "businessBrandName", Types.VARCHAR },
            { "descriptionBusinessBrand", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table BusinessBrand (businessBrandName VARCHAR(75) not null primary key,descriptionBusinessBrand VARCHAR(75) null)";
    public static final String TABLE_SQL_DROP = "drop table BusinessBrand";
    public static final String ORDER_BY_JPQL = " ORDER BY entityBusinessBrand.businessBrandName ASC";
    public static final String ORDER_BY_SQL = " ORDER BY BusinessBrand.businessBrandName ASC";
    public static final String DATA_SOURCE = "ucwrtDataSource";
    public static final String SESSION_FACTORY = "ucwrtSessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.consistent.ucwrt.model.EntityBusinessBrand"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.consistent.ucwrt.model.EntityBusinessBrand"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.com.consistent.ucwrt.model.EntityBusinessBrand"),
            true);
    public static long BUSINESSBRANDNAME_COLUMN_BITMASK = 1L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.consistent.ucwrt.model.EntityBusinessBrand"));
    private static ClassLoader _classLoader = EntityBusinessBrand.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            EntityBusinessBrand.class
        };
    private String _businessBrandName;
    private String _originalBusinessBrandName;
    private String _descriptionBusinessBrand;
    private long _columnBitmask;
    private EntityBusinessBrand _escapedModel;

    public EntityBusinessBrandModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static EntityBusinessBrand toModel(EntityBusinessBrandSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        EntityBusinessBrand model = new EntityBusinessBrandImpl();

        model.setBusinessBrandName(soapModel.getBusinessBrandName());
        model.setDescriptionBusinessBrand(soapModel.getDescriptionBusinessBrand());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<EntityBusinessBrand> toModels(
        EntityBusinessBrandSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<EntityBusinessBrand> models = new ArrayList<EntityBusinessBrand>(soapModels.length);

        for (EntityBusinessBrandSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public String getPrimaryKey() {
        return _businessBrandName;
    }

    @Override
    public void setPrimaryKey(String primaryKey) {
        setBusinessBrandName(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _businessBrandName;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey((String) primaryKeyObj);
    }

    @Override
    public Class<?> getModelClass() {
        return EntityBusinessBrand.class;
    }

    @Override
    public String getModelClassName() {
        return EntityBusinessBrand.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("businessBrandName", getBusinessBrandName());
        attributes.put("descriptionBusinessBrand", getDescriptionBusinessBrand());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        String businessBrandName = (String) attributes.get("businessBrandName");

        if (businessBrandName != null) {
            setBusinessBrandName(businessBrandName);
        }

        String descriptionBusinessBrand = (String) attributes.get(
                "descriptionBusinessBrand");

        if (descriptionBusinessBrand != null) {
            setDescriptionBusinessBrand(descriptionBusinessBrand);
        }
    }

    @JSON
    @Override
    public String getBusinessBrandName() {
        if (_businessBrandName == null) {
            return StringPool.BLANK;
        } else {
            return _businessBrandName;
        }
    }

    @Override
    public void setBusinessBrandName(String businessBrandName) {
        _columnBitmask |= BUSINESSBRANDNAME_COLUMN_BITMASK;

        if (_originalBusinessBrandName == null) {
            _originalBusinessBrandName = _businessBrandName;
        }

        _businessBrandName = businessBrandName;
    }

    public String getOriginalBusinessBrandName() {
        return GetterUtil.getString(_originalBusinessBrandName);
    }

    @JSON
    @Override
    public String getDescriptionBusinessBrand() {
        if (_descriptionBusinessBrand == null) {
            return StringPool.BLANK;
        } else {
            return _descriptionBusinessBrand;
        }
    }

    @Override
    public void setDescriptionBusinessBrand(String descriptionBusinessBrand) {
        _descriptionBusinessBrand = descriptionBusinessBrand;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public EntityBusinessBrand toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (EntityBusinessBrand) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        EntityBusinessBrandImpl entityBusinessBrandImpl = new EntityBusinessBrandImpl();

        entityBusinessBrandImpl.setBusinessBrandName(getBusinessBrandName());
        entityBusinessBrandImpl.setDescriptionBusinessBrand(getDescriptionBusinessBrand());

        entityBusinessBrandImpl.resetOriginalValues();

        return entityBusinessBrandImpl;
    }

    @Override
    public int compareTo(EntityBusinessBrand entityBusinessBrand) {
        String primaryKey = entityBusinessBrand.getPrimaryKey();

        return getPrimaryKey().compareTo(primaryKey);
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof EntityBusinessBrand)) {
            return false;
        }

        EntityBusinessBrand entityBusinessBrand = (EntityBusinessBrand) obj;

        String primaryKey = entityBusinessBrand.getPrimaryKey();

        if (getPrimaryKey().equals(primaryKey)) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey().hashCode();
    }

    @Override
    public void resetOriginalValues() {
        EntityBusinessBrandModelImpl entityBusinessBrandModelImpl = this;

        entityBusinessBrandModelImpl._originalBusinessBrandName = entityBusinessBrandModelImpl._businessBrandName;

        entityBusinessBrandModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<EntityBusinessBrand> toCacheModel() {
        EntityBusinessBrandCacheModel entityBusinessBrandCacheModel = new EntityBusinessBrandCacheModel();

        entityBusinessBrandCacheModel.businessBrandName = getBusinessBrandName();

        String businessBrandName = entityBusinessBrandCacheModel.businessBrandName;

        if ((businessBrandName != null) && (businessBrandName.length() == 0)) {
            entityBusinessBrandCacheModel.businessBrandName = null;
        }

        entityBusinessBrandCacheModel.descriptionBusinessBrand = getDescriptionBusinessBrand();

        String descriptionBusinessBrand = entityBusinessBrandCacheModel.descriptionBusinessBrand;

        if ((descriptionBusinessBrand != null) &&
                (descriptionBusinessBrand.length() == 0)) {
            entityBusinessBrandCacheModel.descriptionBusinessBrand = null;
        }

        return entityBusinessBrandCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(5);

        sb.append("{businessBrandName=");
        sb.append(getBusinessBrandName());
        sb.append(", descriptionBusinessBrand=");
        sb.append(getDescriptionBusinessBrand());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(10);

        sb.append("<model><model-name>");
        sb.append("com.consistent.ucwrt.model.EntityBusinessBrand");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>businessBrandName</column-name><column-value><![CDATA[");
        sb.append(getBusinessBrandName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>descriptionBusinessBrand</column-name><column-value><![CDATA[");
        sb.append(getDescriptionBusinessBrand());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
