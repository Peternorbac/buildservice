package com.consistent.ucwrt.model.impl;

import com.consistent.ucwrt.model.EntityWayToPay;
import com.consistent.ucwrt.model.EntityWayToPayModel;
import com.consistent.ucwrt.model.EntityWayToPaySoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the EntityWayToPay service. Represents a row in the &quot;WayToPay&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.consistent.ucwrt.model.EntityWayToPayModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EntityWayToPayImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see EntityWayToPayImpl
 * @see com.consistent.ucwrt.model.EntityWayToPay
 * @see com.consistent.ucwrt.model.EntityWayToPayModel
 * @generated
 */
@JSON(strict = true)
public class EntityWayToPayModelImpl extends BaseModelImpl<EntityWayToPay>
    implements EntityWayToPayModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a entity way to pay model instance should use the {@link com.consistent.ucwrt.model.EntityWayToPay} interface instead.
     */
    public static final String TABLE_NAME = "WayToPay";
    public static final Object[][] TABLE_COLUMNS = {
            { "wayPayId", Types.INTEGER },
            { "payName", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table WayToPay (wayPayId INTEGER not null primary key,payName VARCHAR(75) null)";
    public static final String TABLE_SQL_DROP = "drop table WayToPay";
    public static final String ORDER_BY_JPQL = " ORDER BY entityWayToPay.wayPayId ASC";
    public static final String ORDER_BY_SQL = " ORDER BY WayToPay.wayPayId ASC";
    public static final String DATA_SOURCE = "ucwrtDataSource";
    public static final String SESSION_FACTORY = "ucwrtSessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.consistent.ucwrt.model.EntityWayToPay"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.consistent.ucwrt.model.EntityWayToPay"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.consistent.ucwrt.model.EntityWayToPay"));
    private static ClassLoader _classLoader = EntityWayToPay.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            EntityWayToPay.class
        };
    private int _wayPayId;
    private String _payName;
    private EntityWayToPay _escapedModel;

    public EntityWayToPayModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static EntityWayToPay toModel(EntityWayToPaySoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        EntityWayToPay model = new EntityWayToPayImpl();

        model.setWayPayId(soapModel.getWayPayId());
        model.setPayName(soapModel.getPayName());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<EntityWayToPay> toModels(EntityWayToPaySoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<EntityWayToPay> models = new ArrayList<EntityWayToPay>(soapModels.length);

        for (EntityWayToPaySoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public int getPrimaryKey() {
        return _wayPayId;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setWayPayId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _wayPayId;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return EntityWayToPay.class;
    }

    @Override
    public String getModelClassName() {
        return EntityWayToPay.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("wayPayId", getWayPayId());
        attributes.put("payName", getPayName());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Integer wayPayId = (Integer) attributes.get("wayPayId");

        if (wayPayId != null) {
            setWayPayId(wayPayId);
        }

        String payName = (String) attributes.get("payName");

        if (payName != null) {
            setPayName(payName);
        }
    }

    @JSON
    @Override
    public int getWayPayId() {
        return _wayPayId;
    }

    @Override
    public void setWayPayId(int wayPayId) {
        _wayPayId = wayPayId;
    }

    @JSON
    @Override
    public String getPayName() {
        if (_payName == null) {
            return StringPool.BLANK;
        } else {
            return _payName;
        }
    }

    @Override
    public void setPayName(String payName) {
        _payName = payName;
    }

    @Override
    public EntityWayToPay toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (EntityWayToPay) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        EntityWayToPayImpl entityWayToPayImpl = new EntityWayToPayImpl();

        entityWayToPayImpl.setWayPayId(getWayPayId());
        entityWayToPayImpl.setPayName(getPayName());

        entityWayToPayImpl.resetOriginalValues();

        return entityWayToPayImpl;
    }

    @Override
    public int compareTo(EntityWayToPay entityWayToPay) {
        int primaryKey = entityWayToPay.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof EntityWayToPay)) {
            return false;
        }

        EntityWayToPay entityWayToPay = (EntityWayToPay) obj;

        int primaryKey = entityWayToPay.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<EntityWayToPay> toCacheModel() {
        EntityWayToPayCacheModel entityWayToPayCacheModel = new EntityWayToPayCacheModel();

        entityWayToPayCacheModel.wayPayId = getWayPayId();

        entityWayToPayCacheModel.payName = getPayName();

        String payName = entityWayToPayCacheModel.payName;

        if ((payName != null) && (payName.length() == 0)) {
            entityWayToPayCacheModel.payName = null;
        }

        return entityWayToPayCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(5);

        sb.append("{wayPayId=");
        sb.append(getWayPayId());
        sb.append(", payName=");
        sb.append(getPayName());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(10);

        sb.append("<model><model-name>");
        sb.append("com.consistent.ucwrt.model.EntityWayToPay");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>wayPayId</column-name><column-value><![CDATA[");
        sb.append(getWayPayId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>payName</column-name><column-value><![CDATA[");
        sb.append(getPayName());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
